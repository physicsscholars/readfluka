#! /usr/bin/python
# creates a FLUKA input file
# usage: create_inp.py base [rand]
# base = calet
# rand - a non-zero integer used as WHAT(2) of RANDOMIZE
#        if rand is omitted or ZERO, then it is sampled from the uniform distribution

import sys, getopt, re, string, os

def RANDOMIZE(fname, r):
    import random
    file = open(fname, "w")
    file.write("! generated by create_inp.py\n")
    if r == 0:
        r = random.random()*2e+6
    file.write("%-9.8s %9.1f%9.0f.0\n" % ("RANDOMIZE", 1.0, r))

def main(argv=None):
    if argv is None:
        argv = sys.argv

    base = argv[1]
    rand = 0
    if len(sys.argv) == 3:
        rand = int(sys.argv[2])

    randomize_file_name = base + ".randomize"
    RANDOMIZE(randomize_file_name, rand)
#    print rand
#    rand = int(argv[2])
#    ID   = argv[2]
#    E0   = argv[3]
#    GAMMA= argv[4]
#    ACCEPTANCE = argv[5]
#    N0   = argv[6]
    patname = "src/" + base + ".inp.pattern"
    inpname = base + ".inp"

    file = open(inpname, "w")
    file.write("! Generated by %s\n" % os.path.basename(sys.argv[0]))
    file.close()
    printfile(patname, inpname)
    os.unlink(randomize_file_name)
    print("created " + inpname)


def printfile(patname, inpname):
    pat = open(patname)
    inp = open(inpname, "a")

    for line in pat.readlines():
        if re.search("\A#include", line):
            line = line.rstrip()
            words = line.split();
            inp.write("! start of included file '%s':\n" % words[1])
            inp.close()
            printfile(words[1], inpname)
            inp = open(inpname, "a")
            inp.write("! end of included file '%s'\n" % words[1])
        else:
            inp.write(line)

if __name__ == "__main__":
    sys.exit(main())
